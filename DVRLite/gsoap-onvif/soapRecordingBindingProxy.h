/* soapRecordingBindingProxy.h
   Generated by gSOAP 2.8.109 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapRecordingBindingProxy_H
#define soapRecordingBindingProxy_H
#include "soapH.h"

    class SOAP_CMAC RecordingBindingProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        /// flag indicating that this context is owned by this proxy and should be deleted by the destructor
        bool soap_own;
        /// Endpoint URL of service 'RecordingBindingProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in onvif.h, if any
        /// Construct a proxy with new managing context
        RecordingBindingProxy();
        /// Copy constructor
        RecordingBindingProxy(const RecordingBindingProxy& rhs);
        /// Construct proxy given a shared managing context
        RecordingBindingProxy(struct soap*);
        /// Construct proxy given a shared managing context and endpoint URL
        RecordingBindingProxy(struct soap*, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        RecordingBindingProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        RecordingBindingProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        RecordingBindingProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        RecordingBindingProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context, when the context was allocated by the constructor
        virtual ~RecordingBindingProxy();
        /// Initializer used by constructors
        virtual void RecordingBindingProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual RecordingBindingProxy *copy();
        /// Copy assignment
        RecordingBindingProxy& operator=(const RecordingBindingProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(struct _wsse__Security *wsse__Security, char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'GetServiceCapabilities' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetServiceCapabilities(_trc__GetServiceCapabilities *trc__GetServiceCapabilities, _trc__GetServiceCapabilitiesResponse &trc__GetServiceCapabilitiesResponse) { return this->GetServiceCapabilities(NULL, NULL, trc__GetServiceCapabilities, trc__GetServiceCapabilitiesResponse); }
        /// Web service synchronous operation 'GetServiceCapabilities' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _trc__GetServiceCapabilities *trc__GetServiceCapabilities, _trc__GetServiceCapabilitiesResponse &trc__GetServiceCapabilitiesResponse) { return this->send_GetServiceCapabilities(soap_endpoint_url, soap_action, trc__GetServiceCapabilities) || this->recv_GetServiceCapabilities(trc__GetServiceCapabilitiesResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetServiceCapabilities' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _trc__GetServiceCapabilities *trc__GetServiceCapabilities);
        /// Web service asynchronous operation 'recv_GetServiceCapabilities' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetServiceCapabilities(_trc__GetServiceCapabilitiesResponse &trc__GetServiceCapabilitiesResponse);
        //
        /// Web service synchronous operation 'CreateRecording' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateRecording(_trc__CreateRecording *trc__CreateRecording, _trc__CreateRecordingResponse &trc__CreateRecordingResponse) { return this->CreateRecording(NULL, NULL, trc__CreateRecording, trc__CreateRecordingResponse); }
        /// Web service synchronous operation 'CreateRecording' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateRecording(const char *soap_endpoint_url, const char *soap_action, _trc__CreateRecording *trc__CreateRecording, _trc__CreateRecordingResponse &trc__CreateRecordingResponse) { return this->send_CreateRecording(soap_endpoint_url, soap_action, trc__CreateRecording) || this->recv_CreateRecording(trc__CreateRecordingResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateRecording' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateRecording(const char *soap_endpoint_url, const char *soap_action, _trc__CreateRecording *trc__CreateRecording);
        /// Web service asynchronous operation 'recv_CreateRecording' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateRecording(_trc__CreateRecordingResponse &trc__CreateRecordingResponse);
        //
        /// Web service synchronous operation 'DeleteRecording' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteRecording(_trc__DeleteRecording *trc__DeleteRecording, _trc__DeleteRecordingResponse &trc__DeleteRecordingResponse) { return this->DeleteRecording(NULL, NULL, trc__DeleteRecording, trc__DeleteRecordingResponse); }
        /// Web service synchronous operation 'DeleteRecording' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteRecording(const char *soap_endpoint_url, const char *soap_action, _trc__DeleteRecording *trc__DeleteRecording, _trc__DeleteRecordingResponse &trc__DeleteRecordingResponse) { return this->send_DeleteRecording(soap_endpoint_url, soap_action, trc__DeleteRecording) || this->recv_DeleteRecording(trc__DeleteRecordingResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteRecording' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteRecording(const char *soap_endpoint_url, const char *soap_action, _trc__DeleteRecording *trc__DeleteRecording);
        /// Web service asynchronous operation 'recv_DeleteRecording' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteRecording(_trc__DeleteRecordingResponse &trc__DeleteRecordingResponse);
        //
        /// Web service synchronous operation 'GetRecordings' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordings(_trc__GetRecordings *trc__GetRecordings, _trc__GetRecordingsResponse &trc__GetRecordingsResponse) { return this->GetRecordings(NULL, NULL, trc__GetRecordings, trc__GetRecordingsResponse); }
        /// Web service synchronous operation 'GetRecordings' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordings(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordings *trc__GetRecordings, _trc__GetRecordingsResponse &trc__GetRecordingsResponse) { return this->send_GetRecordings(soap_endpoint_url, soap_action, trc__GetRecordings) || this->recv_GetRecordings(trc__GetRecordingsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecordings' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecordings(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordings *trc__GetRecordings);
        /// Web service asynchronous operation 'recv_GetRecordings' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecordings(_trc__GetRecordingsResponse &trc__GetRecordingsResponse);
        //
        /// Web service synchronous operation 'SetRecordingConfiguration' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetRecordingConfiguration(_trc__SetRecordingConfiguration *trc__SetRecordingConfiguration, _trc__SetRecordingConfigurationResponse &trc__SetRecordingConfigurationResponse) { return this->SetRecordingConfiguration(NULL, NULL, trc__SetRecordingConfiguration, trc__SetRecordingConfigurationResponse); }
        /// Web service synchronous operation 'SetRecordingConfiguration' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetRecordingConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__SetRecordingConfiguration *trc__SetRecordingConfiguration, _trc__SetRecordingConfigurationResponse &trc__SetRecordingConfigurationResponse) { return this->send_SetRecordingConfiguration(soap_endpoint_url, soap_action, trc__SetRecordingConfiguration) || this->recv_SetRecordingConfiguration(trc__SetRecordingConfigurationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetRecordingConfiguration' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetRecordingConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__SetRecordingConfiguration *trc__SetRecordingConfiguration);
        /// Web service asynchronous operation 'recv_SetRecordingConfiguration' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetRecordingConfiguration(_trc__SetRecordingConfigurationResponse &trc__SetRecordingConfigurationResponse);
        //
        /// Web service synchronous operation 'GetRecordingConfiguration' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingConfiguration(_trc__GetRecordingConfiguration *trc__GetRecordingConfiguration, _trc__GetRecordingConfigurationResponse &trc__GetRecordingConfigurationResponse) { return this->GetRecordingConfiguration(NULL, NULL, trc__GetRecordingConfiguration, trc__GetRecordingConfigurationResponse); }
        /// Web service synchronous operation 'GetRecordingConfiguration' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingConfiguration *trc__GetRecordingConfiguration, _trc__GetRecordingConfigurationResponse &trc__GetRecordingConfigurationResponse) { return this->send_GetRecordingConfiguration(soap_endpoint_url, soap_action, trc__GetRecordingConfiguration) || this->recv_GetRecordingConfiguration(trc__GetRecordingConfigurationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecordingConfiguration' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecordingConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingConfiguration *trc__GetRecordingConfiguration);
        /// Web service asynchronous operation 'recv_GetRecordingConfiguration' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecordingConfiguration(_trc__GetRecordingConfigurationResponse &trc__GetRecordingConfigurationResponse);
        //
        /// Web service synchronous operation 'GetRecordingOptions' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingOptions(_trc__GetRecordingOptions *trc__GetRecordingOptions, _trc__GetRecordingOptionsResponse &trc__GetRecordingOptionsResponse) { return this->GetRecordingOptions(NULL, NULL, trc__GetRecordingOptions, trc__GetRecordingOptionsResponse); }
        /// Web service synchronous operation 'GetRecordingOptions' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingOptions(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingOptions *trc__GetRecordingOptions, _trc__GetRecordingOptionsResponse &trc__GetRecordingOptionsResponse) { return this->send_GetRecordingOptions(soap_endpoint_url, soap_action, trc__GetRecordingOptions) || this->recv_GetRecordingOptions(trc__GetRecordingOptionsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecordingOptions' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecordingOptions(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingOptions *trc__GetRecordingOptions);
        /// Web service asynchronous operation 'recv_GetRecordingOptions' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecordingOptions(_trc__GetRecordingOptionsResponse &trc__GetRecordingOptionsResponse);
        //
        /// Web service synchronous operation 'CreateTrack' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateTrack(_trc__CreateTrack *trc__CreateTrack, _trc__CreateTrackResponse &trc__CreateTrackResponse) { return this->CreateTrack(NULL, NULL, trc__CreateTrack, trc__CreateTrackResponse); }
        /// Web service synchronous operation 'CreateTrack' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateTrack(const char *soap_endpoint_url, const char *soap_action, _trc__CreateTrack *trc__CreateTrack, _trc__CreateTrackResponse &trc__CreateTrackResponse) { return this->send_CreateTrack(soap_endpoint_url, soap_action, trc__CreateTrack) || this->recv_CreateTrack(trc__CreateTrackResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateTrack' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateTrack(const char *soap_endpoint_url, const char *soap_action, _trc__CreateTrack *trc__CreateTrack);
        /// Web service asynchronous operation 'recv_CreateTrack' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateTrack(_trc__CreateTrackResponse &trc__CreateTrackResponse);
        //
        /// Web service synchronous operation 'DeleteTrack' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteTrack(_trc__DeleteTrack *trc__DeleteTrack, _trc__DeleteTrackResponse &trc__DeleteTrackResponse) { return this->DeleteTrack(NULL, NULL, trc__DeleteTrack, trc__DeleteTrackResponse); }
        /// Web service synchronous operation 'DeleteTrack' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteTrack(const char *soap_endpoint_url, const char *soap_action, _trc__DeleteTrack *trc__DeleteTrack, _trc__DeleteTrackResponse &trc__DeleteTrackResponse) { return this->send_DeleteTrack(soap_endpoint_url, soap_action, trc__DeleteTrack) || this->recv_DeleteTrack(trc__DeleteTrackResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteTrack' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteTrack(const char *soap_endpoint_url, const char *soap_action, _trc__DeleteTrack *trc__DeleteTrack);
        /// Web service asynchronous operation 'recv_DeleteTrack' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteTrack(_trc__DeleteTrackResponse &trc__DeleteTrackResponse);
        //
        /// Web service synchronous operation 'GetTrackConfiguration' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetTrackConfiguration(_trc__GetTrackConfiguration *trc__GetTrackConfiguration, _trc__GetTrackConfigurationResponse &trc__GetTrackConfigurationResponse) { return this->GetTrackConfiguration(NULL, NULL, trc__GetTrackConfiguration, trc__GetTrackConfigurationResponse); }
        /// Web service synchronous operation 'GetTrackConfiguration' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetTrackConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__GetTrackConfiguration *trc__GetTrackConfiguration, _trc__GetTrackConfigurationResponse &trc__GetTrackConfigurationResponse) { return this->send_GetTrackConfiguration(soap_endpoint_url, soap_action, trc__GetTrackConfiguration) || this->recv_GetTrackConfiguration(trc__GetTrackConfigurationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetTrackConfiguration' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetTrackConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__GetTrackConfiguration *trc__GetTrackConfiguration);
        /// Web service asynchronous operation 'recv_GetTrackConfiguration' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetTrackConfiguration(_trc__GetTrackConfigurationResponse &trc__GetTrackConfigurationResponse);
        //
        /// Web service synchronous operation 'SetTrackConfiguration' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetTrackConfiguration(_trc__SetTrackConfiguration *trc__SetTrackConfiguration, _trc__SetTrackConfigurationResponse &trc__SetTrackConfigurationResponse) { return this->SetTrackConfiguration(NULL, NULL, trc__SetTrackConfiguration, trc__SetTrackConfigurationResponse); }
        /// Web service synchronous operation 'SetTrackConfiguration' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetTrackConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__SetTrackConfiguration *trc__SetTrackConfiguration, _trc__SetTrackConfigurationResponse &trc__SetTrackConfigurationResponse) { return this->send_SetTrackConfiguration(soap_endpoint_url, soap_action, trc__SetTrackConfiguration) || this->recv_SetTrackConfiguration(trc__SetTrackConfigurationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetTrackConfiguration' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetTrackConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__SetTrackConfiguration *trc__SetTrackConfiguration);
        /// Web service asynchronous operation 'recv_SetTrackConfiguration' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetTrackConfiguration(_trc__SetTrackConfigurationResponse &trc__SetTrackConfigurationResponse);
        //
        /// Web service synchronous operation 'CreateRecordingJob' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int CreateRecordingJob(_trc__CreateRecordingJob *trc__CreateRecordingJob, _trc__CreateRecordingJobResponse &trc__CreateRecordingJobResponse) { return this->CreateRecordingJob(NULL, NULL, trc__CreateRecordingJob, trc__CreateRecordingJobResponse); }
        /// Web service synchronous operation 'CreateRecordingJob' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int CreateRecordingJob(const char *soap_endpoint_url, const char *soap_action, _trc__CreateRecordingJob *trc__CreateRecordingJob, _trc__CreateRecordingJobResponse &trc__CreateRecordingJobResponse) { return this->send_CreateRecordingJob(soap_endpoint_url, soap_action, trc__CreateRecordingJob) || this->recv_CreateRecordingJob(trc__CreateRecordingJobResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_CreateRecordingJob' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_CreateRecordingJob(const char *soap_endpoint_url, const char *soap_action, _trc__CreateRecordingJob *trc__CreateRecordingJob);
        /// Web service asynchronous operation 'recv_CreateRecordingJob' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_CreateRecordingJob(_trc__CreateRecordingJobResponse &trc__CreateRecordingJobResponse);
        //
        /// Web service synchronous operation 'DeleteRecordingJob' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteRecordingJob(_trc__DeleteRecordingJob *trc__DeleteRecordingJob, _trc__DeleteRecordingJobResponse &trc__DeleteRecordingJobResponse) { return this->DeleteRecordingJob(NULL, NULL, trc__DeleteRecordingJob, trc__DeleteRecordingJobResponse); }
        /// Web service synchronous operation 'DeleteRecordingJob' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int DeleteRecordingJob(const char *soap_endpoint_url, const char *soap_action, _trc__DeleteRecordingJob *trc__DeleteRecordingJob, _trc__DeleteRecordingJobResponse &trc__DeleteRecordingJobResponse) { return this->send_DeleteRecordingJob(soap_endpoint_url, soap_action, trc__DeleteRecordingJob) || this->recv_DeleteRecordingJob(trc__DeleteRecordingJobResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_DeleteRecordingJob' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_DeleteRecordingJob(const char *soap_endpoint_url, const char *soap_action, _trc__DeleteRecordingJob *trc__DeleteRecordingJob);
        /// Web service asynchronous operation 'recv_DeleteRecordingJob' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_DeleteRecordingJob(_trc__DeleteRecordingJobResponse &trc__DeleteRecordingJobResponse);
        //
        /// Web service synchronous operation 'GetRecordingJobs' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingJobs(_trc__GetRecordingJobs *trc__GetRecordingJobs, _trc__GetRecordingJobsResponse &trc__GetRecordingJobsResponse) { return this->GetRecordingJobs(NULL, NULL, trc__GetRecordingJobs, trc__GetRecordingJobsResponse); }
        /// Web service synchronous operation 'GetRecordingJobs' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingJobs(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingJobs *trc__GetRecordingJobs, _trc__GetRecordingJobsResponse &trc__GetRecordingJobsResponse) { return this->send_GetRecordingJobs(soap_endpoint_url, soap_action, trc__GetRecordingJobs) || this->recv_GetRecordingJobs(trc__GetRecordingJobsResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecordingJobs' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecordingJobs(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingJobs *trc__GetRecordingJobs);
        /// Web service asynchronous operation 'recv_GetRecordingJobs' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecordingJobs(_trc__GetRecordingJobsResponse &trc__GetRecordingJobsResponse);
        //
        /// Web service synchronous operation 'SetRecordingJobConfiguration' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetRecordingJobConfiguration(_trc__SetRecordingJobConfiguration *trc__SetRecordingJobConfiguration, _trc__SetRecordingJobConfigurationResponse &trc__SetRecordingJobConfigurationResponse) { return this->SetRecordingJobConfiguration(NULL, NULL, trc__SetRecordingJobConfiguration, trc__SetRecordingJobConfigurationResponse); }
        /// Web service synchronous operation 'SetRecordingJobConfiguration' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetRecordingJobConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__SetRecordingJobConfiguration *trc__SetRecordingJobConfiguration, _trc__SetRecordingJobConfigurationResponse &trc__SetRecordingJobConfigurationResponse) { return this->send_SetRecordingJobConfiguration(soap_endpoint_url, soap_action, trc__SetRecordingJobConfiguration) || this->recv_SetRecordingJobConfiguration(trc__SetRecordingJobConfigurationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetRecordingJobConfiguration' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetRecordingJobConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__SetRecordingJobConfiguration *trc__SetRecordingJobConfiguration);
        /// Web service asynchronous operation 'recv_SetRecordingJobConfiguration' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetRecordingJobConfiguration(_trc__SetRecordingJobConfigurationResponse &trc__SetRecordingJobConfigurationResponse);
        //
        /// Web service synchronous operation 'GetRecordingJobConfiguration' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingJobConfiguration(_trc__GetRecordingJobConfiguration *trc__GetRecordingJobConfiguration, _trc__GetRecordingJobConfigurationResponse &trc__GetRecordingJobConfigurationResponse) { return this->GetRecordingJobConfiguration(NULL, NULL, trc__GetRecordingJobConfiguration, trc__GetRecordingJobConfigurationResponse); }
        /// Web service synchronous operation 'GetRecordingJobConfiguration' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingJobConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingJobConfiguration *trc__GetRecordingJobConfiguration, _trc__GetRecordingJobConfigurationResponse &trc__GetRecordingJobConfigurationResponse) { return this->send_GetRecordingJobConfiguration(soap_endpoint_url, soap_action, trc__GetRecordingJobConfiguration) || this->recv_GetRecordingJobConfiguration(trc__GetRecordingJobConfigurationResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecordingJobConfiguration' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecordingJobConfiguration(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingJobConfiguration *trc__GetRecordingJobConfiguration);
        /// Web service asynchronous operation 'recv_GetRecordingJobConfiguration' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecordingJobConfiguration(_trc__GetRecordingJobConfigurationResponse &trc__GetRecordingJobConfigurationResponse);
        //
        /// Web service synchronous operation 'SetRecordingJobMode' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int SetRecordingJobMode(_trc__SetRecordingJobMode *trc__SetRecordingJobMode, _trc__SetRecordingJobModeResponse &trc__SetRecordingJobModeResponse) { return this->SetRecordingJobMode(NULL, NULL, trc__SetRecordingJobMode, trc__SetRecordingJobModeResponse); }
        /// Web service synchronous operation 'SetRecordingJobMode' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int SetRecordingJobMode(const char *soap_endpoint_url, const char *soap_action, _trc__SetRecordingJobMode *trc__SetRecordingJobMode, _trc__SetRecordingJobModeResponse &trc__SetRecordingJobModeResponse) { return this->send_SetRecordingJobMode(soap_endpoint_url, soap_action, trc__SetRecordingJobMode) || this->recv_SetRecordingJobMode(trc__SetRecordingJobModeResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_SetRecordingJobMode' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_SetRecordingJobMode(const char *soap_endpoint_url, const char *soap_action, _trc__SetRecordingJobMode *trc__SetRecordingJobMode);
        /// Web service asynchronous operation 'recv_SetRecordingJobMode' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_SetRecordingJobMode(_trc__SetRecordingJobModeResponse &trc__SetRecordingJobModeResponse);
        //
        /// Web service synchronous operation 'GetRecordingJobState' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingJobState(_trc__GetRecordingJobState *trc__GetRecordingJobState, _trc__GetRecordingJobStateResponse &trc__GetRecordingJobStateResponse) { return this->GetRecordingJobState(NULL, NULL, trc__GetRecordingJobState, trc__GetRecordingJobStateResponse); }
        /// Web service synchronous operation 'GetRecordingJobState' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetRecordingJobState(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingJobState *trc__GetRecordingJobState, _trc__GetRecordingJobStateResponse &trc__GetRecordingJobStateResponse) { return this->send_GetRecordingJobState(soap_endpoint_url, soap_action, trc__GetRecordingJobState) || this->recv_GetRecordingJobState(trc__GetRecordingJobStateResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetRecordingJobState' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetRecordingJobState(const char *soap_endpoint_url, const char *soap_action, _trc__GetRecordingJobState *trc__GetRecordingJobState);
        /// Web service asynchronous operation 'recv_GetRecordingJobState' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetRecordingJobState(_trc__GetRecordingJobStateResponse &trc__GetRecordingJobStateResponse);
        //
        /// Web service synchronous operation 'ExportRecordedData' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int ExportRecordedData(_trc__ExportRecordedData *trc__ExportRecordedData, _trc__ExportRecordedDataResponse &trc__ExportRecordedDataResponse) { return this->ExportRecordedData(NULL, NULL, trc__ExportRecordedData, trc__ExportRecordedDataResponse); }
        /// Web service synchronous operation 'ExportRecordedData' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int ExportRecordedData(const char *soap_endpoint_url, const char *soap_action, _trc__ExportRecordedData *trc__ExportRecordedData, _trc__ExportRecordedDataResponse &trc__ExportRecordedDataResponse) { return this->send_ExportRecordedData(soap_endpoint_url, soap_action, trc__ExportRecordedData) || this->recv_ExportRecordedData(trc__ExportRecordedDataResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_ExportRecordedData' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_ExportRecordedData(const char *soap_endpoint_url, const char *soap_action, _trc__ExportRecordedData *trc__ExportRecordedData);
        /// Web service asynchronous operation 'recv_ExportRecordedData' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_ExportRecordedData(_trc__ExportRecordedDataResponse &trc__ExportRecordedDataResponse);
        //
        /// Web service synchronous operation 'StopExportRecordedData' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int StopExportRecordedData(_trc__StopExportRecordedData *trc__StopExportRecordedData, _trc__StopExportRecordedDataResponse &trc__StopExportRecordedDataResponse) { return this->StopExportRecordedData(NULL, NULL, trc__StopExportRecordedData, trc__StopExportRecordedDataResponse); }
        /// Web service synchronous operation 'StopExportRecordedData' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int StopExportRecordedData(const char *soap_endpoint_url, const char *soap_action, _trc__StopExportRecordedData *trc__StopExportRecordedData, _trc__StopExportRecordedDataResponse &trc__StopExportRecordedDataResponse) { return this->send_StopExportRecordedData(soap_endpoint_url, soap_action, trc__StopExportRecordedData) || this->recv_StopExportRecordedData(trc__StopExportRecordedDataResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_StopExportRecordedData' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_StopExportRecordedData(const char *soap_endpoint_url, const char *soap_action, _trc__StopExportRecordedData *trc__StopExportRecordedData);
        /// Web service asynchronous operation 'recv_StopExportRecordedData' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_StopExportRecordedData(_trc__StopExportRecordedDataResponse &trc__StopExportRecordedDataResponse);
        //
        /// Web service synchronous operation 'GetExportRecordedDataState' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int GetExportRecordedDataState(_trc__GetExportRecordedDataState *trc__GetExportRecordedDataState, _trc__GetExportRecordedDataStateResponse &trc__GetExportRecordedDataStateResponse) { return this->GetExportRecordedDataState(NULL, NULL, trc__GetExportRecordedDataState, trc__GetExportRecordedDataStateResponse); }
        /// Web service synchronous operation 'GetExportRecordedDataState' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int GetExportRecordedDataState(const char *soap_endpoint_url, const char *soap_action, _trc__GetExportRecordedDataState *trc__GetExportRecordedDataState, _trc__GetExportRecordedDataStateResponse &trc__GetExportRecordedDataStateResponse) { return this->send_GetExportRecordedDataState(soap_endpoint_url, soap_action, trc__GetExportRecordedDataState) || this->recv_GetExportRecordedDataState(trc__GetExportRecordedDataStateResponse) ? this->soap->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_GetExportRecordedDataState' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_GetExportRecordedDataState(const char *soap_endpoint_url, const char *soap_action, _trc__GetExportRecordedDataState *trc__GetExportRecordedDataState);
        /// Web service asynchronous operation 'recv_GetExportRecordedDataState' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_GetExportRecordedDataState(_trc__GetExportRecordedDataStateResponse &trc__GetExportRecordedDataStateResponse);
    };
#endif
