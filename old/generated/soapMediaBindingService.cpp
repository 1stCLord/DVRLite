/* soapMediaBindingService.cpp
   Generated by gSOAP 2.8.55 for generated.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMediaBindingService.h"

MediaBindingService::MediaBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

MediaBindingService::MediaBindingService(const MediaBindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

MediaBindingService::MediaBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	MediaBindingService_init(_soap->imode, _soap->omode);
}

MediaBindingService::MediaBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(iomode, iomode);
}

MediaBindingService::MediaBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(imode, omode);
}

MediaBindingService::~MediaBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void MediaBindingService::MediaBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void MediaBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void MediaBindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	MediaBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
MediaBindingService *MediaBindingService::copy()
{	MediaBindingService *dup = SOAP_NEW_COPY(MediaBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

MediaBindingService& MediaBindingService::operator=(const MediaBindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int MediaBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int MediaBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int MediaBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int MediaBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int MediaBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int MediaBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void MediaBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void MediaBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *MediaBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void MediaBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void MediaBindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
}

::SOAP_ENV__Header *MediaBindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int MediaBindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int MediaBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET MediaBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET MediaBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int MediaBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int MediaBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___trt__GetServiceCapabilities(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoSources(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioSources(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioOutputs(struct soap*, MediaBindingService*);
static int serve___trt__CreateProfile(struct soap*, MediaBindingService*);
static int serve___trt__GetProfile(struct soap*, MediaBindingService*);
static int serve___trt__GetProfiles(struct soap*, MediaBindingService*);
static int serve___trt__AddVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddPTZConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__AddAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemovePTZConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__RemoveAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__DeleteProfile(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoAnalyticsConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetMetadataConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioOutputConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioDecoderConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleVideoEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleVideoSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleAudioEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleAudioSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleMetadataConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleAudioOutputConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__GetCompatibleAudioDecoderConfigurations(struct soap*, MediaBindingService*);
static int serve___trt__SetVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__SetAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoSourceConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoEncoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioSourceConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioEncoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetMetadataConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioOutputConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetAudioDecoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, MediaBindingService*);
static int serve___trt__GetStreamUri(struct soap*, MediaBindingService*);
static int serve___trt__StartMulticastStreaming(struct soap*, MediaBindingService*);
static int serve___trt__StopMulticastStreaming(struct soap*, MediaBindingService*);
static int serve___trt__SetSynchronizationPoint(struct soap*, MediaBindingService*);
static int serve___trt__GetSnapshotUri(struct soap*, MediaBindingService*);
static int serve___trt__GetVideoSourceModes(struct soap*, MediaBindingService*);
static int serve___trt__SetVideoSourceMode(struct soap*, MediaBindingService*);
static int serve___trt__GetOSDs(struct soap*, MediaBindingService*);
static int serve___trt__GetOSD(struct soap*, MediaBindingService*);
static int serve___trt__GetOSDOptions(struct soap*, MediaBindingService*);
static int serve___trt__SetOSD(struct soap*, MediaBindingService*);
static int serve___trt__CreateOSD(struct soap*, MediaBindingService*);
static int serve___trt__DeleteOSD(struct soap*, MediaBindingService*);

int MediaBindingService::dispatch()
{	return dispatch(this->soap);
}

int MediaBindingService::dispatch(struct soap* soap)
{
	MediaBindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetServiceCapabilities")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities")))
		return serve___trt__GetServiceCapabilities(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoSources")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdlGetVideoSources/")))
		return serve___trt__GetVideoSources(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioSources")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioSources")))
		return serve___trt__GetAudioSources(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioOutputs")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs")))
		return serve___trt__GetAudioOutputs(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:CreateProfile")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/CreateProfile")))
		return serve___trt__CreateProfile(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetProfile")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdlGetProfile/")))
		return serve___trt__GetProfile(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetProfiles")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetProfiles")))
		return serve___trt__GetProfiles(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddVideoEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration")))
		return serve___trt__AddVideoEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddVideoSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration")))
		return serve___trt__AddVideoSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddAudioEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration")))
		return serve___trt__AddAudioEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddAudioSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration")))
		return serve___trt__AddAudioSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddPTZConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration")))
		return serve___trt__AddPTZConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddVideoAnalyticsConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration")))
		return serve___trt__AddVideoAnalyticsConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddMetadataConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration")))
		return serve___trt__AddMetadataConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddAudioOutputConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration")))
		return serve___trt__AddAudioOutputConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:AddAudioDecoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration")))
		return serve___trt__AddAudioDecoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveVideoEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration")))
		return serve___trt__RemoveVideoEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveVideoSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration")))
		return serve___trt__RemoveVideoSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveAudioEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration")))
		return serve___trt__RemoveAudioEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveAudioSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration")))
		return serve___trt__RemoveAudioSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemovePTZConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration")))
		return serve___trt__RemovePTZConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveVideoAnalyticsConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration")))
		return serve___trt__RemoveVideoAnalyticsConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveMetadataConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration")))
		return serve___trt__RemoveMetadataConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveAudioOutputConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration")))
		return serve___trt__RemoveAudioOutputConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:RemoveAudioDecoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration")))
		return serve___trt__RemoveAudioDecoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:DeleteProfile")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/DeleteProfile")))
		return serve___trt__DeleteProfile(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoSourceConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations")))
		return serve___trt__GetVideoSourceConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoEncoderConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations")))
		return serve___trt__GetVideoEncoderConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioSourceConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/")))
		return serve___trt__GetAudioSourceConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioEncoderConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations")))
		return serve___trt__GetAudioEncoderConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoAnalyticsConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations")))
		return serve___trt__GetVideoAnalyticsConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetMetadataConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations")))
		return serve___trt__GetMetadataConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioOutputConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations")))
		return serve___trt__GetAudioOutputConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioDecoderConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations")))
		return serve___trt__GetAudioDecoderConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration")))
		return serve___trt__GetVideoSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration")))
		return serve___trt__GetVideoEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration")))
		return serve___trt__GetAudioSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration")))
		return serve___trt__GetAudioEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoAnalyticsConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration")))
		return serve___trt__GetVideoAnalyticsConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetMetadataConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration")))
		return serve___trt__GetMetadataConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioOutputConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration")))
		return serve___trt__GetAudioOutputConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioDecoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration")))
		return serve___trt__GetAudioDecoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleVideoEncoderConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations")))
		return serve___trt__GetCompatibleVideoEncoderConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleVideoSourceConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations")))
		return serve___trt__GetCompatibleVideoSourceConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleAudioEncoderConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations")))
		return serve___trt__GetCompatibleAudioEncoderConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleAudioSourceConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations")))
		return serve___trt__GetCompatibleAudioSourceConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleVideoAnalyticsConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations")))
		return serve___trt__GetCompatibleVideoAnalyticsConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleMetadataConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations")))
		return serve___trt__GetCompatibleMetadataConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleAudioOutputConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations")))
		return serve___trt__GetCompatibleAudioOutputConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetCompatibleAudioDecoderConfigurations")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations")))
		return serve___trt__GetCompatibleAudioDecoderConfigurations(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetVideoSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration")))
		return serve___trt__SetVideoSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetVideoEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration")))
		return serve___trt__SetVideoEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetAudioSourceConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration")))
		return serve___trt__SetAudioSourceConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetAudioEncoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration")))
		return serve___trt__SetAudioEncoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetVideoAnalyticsConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration")))
		return serve___trt__SetVideoAnalyticsConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetMetadataConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration")))
		return serve___trt__SetMetadataConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetAudioOutputConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration")))
		return serve___trt__SetAudioOutputConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetAudioDecoderConfiguration")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration")))
		return serve___trt__SetAudioDecoderConfiguration(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoSourceConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/")))
		return serve___trt__GetVideoSourceConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoEncoderConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions")))
		return serve___trt__GetVideoEncoderConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioSourceConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions")))
		return serve___trt__GetAudioSourceConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioEncoderConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions")))
		return serve___trt__GetAudioEncoderConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetMetadataConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions")))
		return serve___trt__GetMetadataConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioOutputConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions")))
		return serve___trt__GetAudioOutputConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetAudioDecoderConfigurationOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions")))
		return serve___trt__GetAudioDecoderConfigurationOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetGuaranteedNumberOfVideoEncoderInstances")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances")))
		return serve___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetStreamUri")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetStreamUri")))
		return serve___trt__GetStreamUri(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:StartMulticastStreaming")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming")))
		return serve___trt__StartMulticastStreaming(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:StopMulticastStreaming")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming")))
		return serve___trt__StopMulticastStreaming(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetSynchronizationPoint")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint")))
		return serve___trt__SetSynchronizationPoint(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetSnapshotUri")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri")))
		return serve___trt__GetSnapshotUri(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetVideoSourceModes")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes")))
		return serve___trt__GetVideoSourceModes(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetVideoSourceMode")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode")))
		return serve___trt__SetVideoSourceMode(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetOSDs")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetOSDs")))
		return serve___trt__GetOSDs(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetOSD")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetOSD")))
		return serve___trt__GetOSD(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:GetOSDOptions")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions")))
		return serve___trt__GetOSDOptions(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:SetOSD")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/SetOSD")))
		return serve___trt__SetOSD(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:CreateOSD")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/CreateOSD")))
		return serve___trt__CreateOSD(soap, this);
	if ((!soap->action && !soap_match_tag(soap, soap->tag, "trt:DeleteOSD")) || (soap->action && !strcmp(soap->action, "http://www.onvif.org/ver10/media/wsdl/DeleteOSD")))
		return serve___trt__DeleteOSD(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___trt__GetServiceCapabilities(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetServiceCapabilities soap_tmp___trt__GetServiceCapabilities;
	_trt__GetServiceCapabilitiesResponse trt__GetServiceCapabilitiesResponse;
	trt__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___trt__GetServiceCapabilities(soap, &soap_tmp___trt__GetServiceCapabilities);
	if (!soap_get___trt__GetServiceCapabilities(soap, &soap_tmp___trt__GetServiceCapabilities, "-trt:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___trt__GetServiceCapabilities.trt__GetServiceCapabilities, trt__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetServiceCapabilitiesResponse.soap_put(soap, "trt:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetServiceCapabilitiesResponse.soap_put(soap, "trt:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoSources(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoSources soap_tmp___trt__GetVideoSources;
	_trt__GetVideoSourcesResponse trt__GetVideoSourcesResponse;
	trt__GetVideoSourcesResponse.soap_default(soap);
	soap_default___trt__GetVideoSources(soap, &soap_tmp___trt__GetVideoSources);
	if (!soap_get___trt__GetVideoSources(soap, &soap_tmp___trt__GetVideoSources, "-trt:GetVideoSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSources(soap_tmp___trt__GetVideoSources.trt__GetVideoSources, trt__GetVideoSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoSourcesResponse.soap_put(soap, "trt:GetVideoSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoSourcesResponse.soap_put(soap, "trt:GetVideoSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioSources(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioSources soap_tmp___trt__GetAudioSources;
	_trt__GetAudioSourcesResponse trt__GetAudioSourcesResponse;
	trt__GetAudioSourcesResponse.soap_default(soap);
	soap_default___trt__GetAudioSources(soap, &soap_tmp___trt__GetAudioSources);
	if (!soap_get___trt__GetAudioSources(soap, &soap_tmp___trt__GetAudioSources, "-trt:GetAudioSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSources(soap_tmp___trt__GetAudioSources.trt__GetAudioSources, trt__GetAudioSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioSourcesResponse.soap_put(soap, "trt:GetAudioSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioSourcesResponse.soap_put(soap, "trt:GetAudioSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioOutputs(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioOutputs soap_tmp___trt__GetAudioOutputs;
	_trt__GetAudioOutputsResponse trt__GetAudioOutputsResponse;
	trt__GetAudioOutputsResponse.soap_default(soap);
	soap_default___trt__GetAudioOutputs(soap, &soap_tmp___trt__GetAudioOutputs);
	if (!soap_get___trt__GetAudioOutputs(soap, &soap_tmp___trt__GetAudioOutputs, "-trt:GetAudioOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputs(soap_tmp___trt__GetAudioOutputs.trt__GetAudioOutputs, trt__GetAudioOutputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioOutputsResponse.soap_put(soap, "trt:GetAudioOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioOutputsResponse.soap_put(soap, "trt:GetAudioOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__CreateProfile(struct soap *soap, MediaBindingService *service)
{	struct __trt__CreateProfile soap_tmp___trt__CreateProfile;
	_trt__CreateProfileResponse trt__CreateProfileResponse;
	trt__CreateProfileResponse.soap_default(soap);
	soap_default___trt__CreateProfile(soap, &soap_tmp___trt__CreateProfile);
	if (!soap_get___trt__CreateProfile(soap, &soap_tmp___trt__CreateProfile, "-trt:CreateProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateProfile(soap_tmp___trt__CreateProfile.trt__CreateProfile, trt__CreateProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__CreateProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__CreateProfileResponse.soap_put(soap, "trt:CreateProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__CreateProfileResponse.soap_put(soap, "trt:CreateProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetProfile(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetProfile soap_tmp___trt__GetProfile;
	_trt__GetProfileResponse trt__GetProfileResponse;
	trt__GetProfileResponse.soap_default(soap);
	soap_default___trt__GetProfile(soap, &soap_tmp___trt__GetProfile);
	if (!soap_get___trt__GetProfile(soap, &soap_tmp___trt__GetProfile, "-trt:GetProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfile(soap_tmp___trt__GetProfile.trt__GetProfile, trt__GetProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetProfileResponse.soap_put(soap, "trt:GetProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetProfileResponse.soap_put(soap, "trt:GetProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetProfiles(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetProfiles soap_tmp___trt__GetProfiles;
	_trt__GetProfilesResponse trt__GetProfilesResponse;
	trt__GetProfilesResponse.soap_default(soap);
	soap_default___trt__GetProfiles(soap, &soap_tmp___trt__GetProfiles);
	if (!soap_get___trt__GetProfiles(soap, &soap_tmp___trt__GetProfiles, "-trt:GetProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfiles(soap_tmp___trt__GetProfiles.trt__GetProfiles, trt__GetProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetProfilesResponse.soap_put(soap, "trt:GetProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetProfilesResponse.soap_put(soap, "trt:GetProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddVideoEncoderConfiguration soap_tmp___trt__AddVideoEncoderConfiguration;
	_trt__AddVideoEncoderConfigurationResponse trt__AddVideoEncoderConfigurationResponse;
	trt__AddVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__AddVideoEncoderConfiguration(soap, &soap_tmp___trt__AddVideoEncoderConfiguration);
	if (!soap_get___trt__AddVideoEncoderConfiguration(soap, &soap_tmp___trt__AddVideoEncoderConfiguration, "-trt:AddVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoEncoderConfiguration(soap_tmp___trt__AddVideoEncoderConfiguration.trt__AddVideoEncoderConfiguration, trt__AddVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddVideoEncoderConfigurationResponse.soap_put(soap, "trt:AddVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddVideoEncoderConfigurationResponse.soap_put(soap, "trt:AddVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddVideoSourceConfiguration soap_tmp___trt__AddVideoSourceConfiguration;
	_trt__AddVideoSourceConfigurationResponse trt__AddVideoSourceConfigurationResponse;
	trt__AddVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__AddVideoSourceConfiguration(soap, &soap_tmp___trt__AddVideoSourceConfiguration);
	if (!soap_get___trt__AddVideoSourceConfiguration(soap, &soap_tmp___trt__AddVideoSourceConfiguration, "-trt:AddVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoSourceConfiguration(soap_tmp___trt__AddVideoSourceConfiguration.trt__AddVideoSourceConfiguration, trt__AddVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddVideoSourceConfigurationResponse.soap_put(soap, "trt:AddVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddVideoSourceConfigurationResponse.soap_put(soap, "trt:AddVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddAudioEncoderConfiguration soap_tmp___trt__AddAudioEncoderConfiguration;
	_trt__AddAudioEncoderConfigurationResponse trt__AddAudioEncoderConfigurationResponse;
	trt__AddAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__AddAudioEncoderConfiguration(soap, &soap_tmp___trt__AddAudioEncoderConfiguration);
	if (!soap_get___trt__AddAudioEncoderConfiguration(soap, &soap_tmp___trt__AddAudioEncoderConfiguration, "-trt:AddAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioEncoderConfiguration(soap_tmp___trt__AddAudioEncoderConfiguration.trt__AddAudioEncoderConfiguration, trt__AddAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddAudioEncoderConfigurationResponse.soap_put(soap, "trt:AddAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddAudioEncoderConfigurationResponse.soap_put(soap, "trt:AddAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddAudioSourceConfiguration soap_tmp___trt__AddAudioSourceConfiguration;
	_trt__AddAudioSourceConfigurationResponse trt__AddAudioSourceConfigurationResponse;
	trt__AddAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__AddAudioSourceConfiguration(soap, &soap_tmp___trt__AddAudioSourceConfiguration);
	if (!soap_get___trt__AddAudioSourceConfiguration(soap, &soap_tmp___trt__AddAudioSourceConfiguration, "-trt:AddAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioSourceConfiguration(soap_tmp___trt__AddAudioSourceConfiguration.trt__AddAudioSourceConfiguration, trt__AddAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddAudioSourceConfigurationResponse.soap_put(soap, "trt:AddAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddAudioSourceConfigurationResponse.soap_put(soap, "trt:AddAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddPTZConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddPTZConfiguration soap_tmp___trt__AddPTZConfiguration;
	_trt__AddPTZConfigurationResponse trt__AddPTZConfigurationResponse;
	trt__AddPTZConfigurationResponse.soap_default(soap);
	soap_default___trt__AddPTZConfiguration(soap, &soap_tmp___trt__AddPTZConfiguration);
	if (!soap_get___trt__AddPTZConfiguration(soap, &soap_tmp___trt__AddPTZConfiguration, "-trt:AddPTZConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddPTZConfiguration(soap_tmp___trt__AddPTZConfiguration.trt__AddPTZConfiguration, trt__AddPTZConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddPTZConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddPTZConfigurationResponse.soap_put(soap, "trt:AddPTZConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddPTZConfigurationResponse.soap_put(soap, "trt:AddPTZConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddVideoAnalyticsConfiguration soap_tmp___trt__AddVideoAnalyticsConfiguration;
	_trt__AddVideoAnalyticsConfigurationResponse trt__AddVideoAnalyticsConfigurationResponse;
	trt__AddVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___trt__AddVideoAnalyticsConfiguration(soap, &soap_tmp___trt__AddVideoAnalyticsConfiguration);
	if (!soap_get___trt__AddVideoAnalyticsConfiguration(soap, &soap_tmp___trt__AddVideoAnalyticsConfiguration, "-trt:AddVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoAnalyticsConfiguration(soap_tmp___trt__AddVideoAnalyticsConfiguration.trt__AddVideoAnalyticsConfiguration, trt__AddVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:AddVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:AddVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddMetadataConfiguration soap_tmp___trt__AddMetadataConfiguration;
	_trt__AddMetadataConfigurationResponse trt__AddMetadataConfigurationResponse;
	trt__AddMetadataConfigurationResponse.soap_default(soap);
	soap_default___trt__AddMetadataConfiguration(soap, &soap_tmp___trt__AddMetadataConfiguration);
	if (!soap_get___trt__AddMetadataConfiguration(soap, &soap_tmp___trt__AddMetadataConfiguration, "-trt:AddMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddMetadataConfiguration(soap_tmp___trt__AddMetadataConfiguration.trt__AddMetadataConfiguration, trt__AddMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddMetadataConfigurationResponse.soap_put(soap, "trt:AddMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddMetadataConfigurationResponse.soap_put(soap, "trt:AddMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddAudioOutputConfiguration soap_tmp___trt__AddAudioOutputConfiguration;
	_trt__AddAudioOutputConfigurationResponse trt__AddAudioOutputConfigurationResponse;
	trt__AddAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___trt__AddAudioOutputConfiguration(soap, &soap_tmp___trt__AddAudioOutputConfiguration);
	if (!soap_get___trt__AddAudioOutputConfiguration(soap, &soap_tmp___trt__AddAudioOutputConfiguration, "-trt:AddAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioOutputConfiguration(soap_tmp___trt__AddAudioOutputConfiguration.trt__AddAudioOutputConfiguration, trt__AddAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddAudioOutputConfigurationResponse.soap_put(soap, "trt:AddAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddAudioOutputConfigurationResponse.soap_put(soap, "trt:AddAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__AddAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__AddAudioDecoderConfiguration soap_tmp___trt__AddAudioDecoderConfiguration;
	_trt__AddAudioDecoderConfigurationResponse trt__AddAudioDecoderConfigurationResponse;
	trt__AddAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___trt__AddAudioDecoderConfiguration(soap, &soap_tmp___trt__AddAudioDecoderConfiguration);
	if (!soap_get___trt__AddAudioDecoderConfiguration(soap, &soap_tmp___trt__AddAudioDecoderConfiguration, "-trt:AddAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioDecoderConfiguration(soap_tmp___trt__AddAudioDecoderConfiguration.trt__AddAudioDecoderConfiguration, trt__AddAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__AddAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__AddAudioDecoderConfigurationResponse.soap_put(soap, "trt:AddAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__AddAudioDecoderConfigurationResponse.soap_put(soap, "trt:AddAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveVideoEncoderConfiguration soap_tmp___trt__RemoveVideoEncoderConfiguration;
	_trt__RemoveVideoEncoderConfigurationResponse trt__RemoveVideoEncoderConfigurationResponse;
	trt__RemoveVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveVideoEncoderConfiguration(soap, &soap_tmp___trt__RemoveVideoEncoderConfiguration);
	if (!soap_get___trt__RemoveVideoEncoderConfiguration(soap, &soap_tmp___trt__RemoveVideoEncoderConfiguration, "-trt:RemoveVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoEncoderConfiguration(soap_tmp___trt__RemoveVideoEncoderConfiguration.trt__RemoveVideoEncoderConfiguration, trt__RemoveVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveVideoEncoderConfigurationResponse.soap_put(soap, "trt:RemoveVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveVideoEncoderConfigurationResponse.soap_put(soap, "trt:RemoveVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveVideoSourceConfiguration soap_tmp___trt__RemoveVideoSourceConfiguration;
	_trt__RemoveVideoSourceConfigurationResponse trt__RemoveVideoSourceConfigurationResponse;
	trt__RemoveVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveVideoSourceConfiguration(soap, &soap_tmp___trt__RemoveVideoSourceConfiguration);
	if (!soap_get___trt__RemoveVideoSourceConfiguration(soap, &soap_tmp___trt__RemoveVideoSourceConfiguration, "-trt:RemoveVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoSourceConfiguration(soap_tmp___trt__RemoveVideoSourceConfiguration.trt__RemoveVideoSourceConfiguration, trt__RemoveVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveVideoSourceConfigurationResponse.soap_put(soap, "trt:RemoveVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveVideoSourceConfigurationResponse.soap_put(soap, "trt:RemoveVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveAudioEncoderConfiguration soap_tmp___trt__RemoveAudioEncoderConfiguration;
	_trt__RemoveAudioEncoderConfigurationResponse trt__RemoveAudioEncoderConfigurationResponse;
	trt__RemoveAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveAudioEncoderConfiguration(soap, &soap_tmp___trt__RemoveAudioEncoderConfiguration);
	if (!soap_get___trt__RemoveAudioEncoderConfiguration(soap, &soap_tmp___trt__RemoveAudioEncoderConfiguration, "-trt:RemoveAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioEncoderConfiguration(soap_tmp___trt__RemoveAudioEncoderConfiguration.trt__RemoveAudioEncoderConfiguration, trt__RemoveAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveAudioEncoderConfigurationResponse.soap_put(soap, "trt:RemoveAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveAudioEncoderConfigurationResponse.soap_put(soap, "trt:RemoveAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveAudioSourceConfiguration soap_tmp___trt__RemoveAudioSourceConfiguration;
	_trt__RemoveAudioSourceConfigurationResponse trt__RemoveAudioSourceConfigurationResponse;
	trt__RemoveAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveAudioSourceConfiguration(soap, &soap_tmp___trt__RemoveAudioSourceConfiguration);
	if (!soap_get___trt__RemoveAudioSourceConfiguration(soap, &soap_tmp___trt__RemoveAudioSourceConfiguration, "-trt:RemoveAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioSourceConfiguration(soap_tmp___trt__RemoveAudioSourceConfiguration.trt__RemoveAudioSourceConfiguration, trt__RemoveAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveAudioSourceConfigurationResponse.soap_put(soap, "trt:RemoveAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveAudioSourceConfigurationResponse.soap_put(soap, "trt:RemoveAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemovePTZConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemovePTZConfiguration soap_tmp___trt__RemovePTZConfiguration;
	_trt__RemovePTZConfigurationResponse trt__RemovePTZConfigurationResponse;
	trt__RemovePTZConfigurationResponse.soap_default(soap);
	soap_default___trt__RemovePTZConfiguration(soap, &soap_tmp___trt__RemovePTZConfiguration);
	if (!soap_get___trt__RemovePTZConfiguration(soap, &soap_tmp___trt__RemovePTZConfiguration, "-trt:RemovePTZConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemovePTZConfiguration(soap_tmp___trt__RemovePTZConfiguration.trt__RemovePTZConfiguration, trt__RemovePTZConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemovePTZConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemovePTZConfigurationResponse.soap_put(soap, "trt:RemovePTZConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemovePTZConfigurationResponse.soap_put(soap, "trt:RemovePTZConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveVideoAnalyticsConfiguration soap_tmp___trt__RemoveVideoAnalyticsConfiguration;
	_trt__RemoveVideoAnalyticsConfigurationResponse trt__RemoveVideoAnalyticsConfigurationResponse;
	trt__RemoveVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___trt__RemoveVideoAnalyticsConfiguration);
	if (!soap_get___trt__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___trt__RemoveVideoAnalyticsConfiguration, "-trt:RemoveVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoAnalyticsConfiguration(soap_tmp___trt__RemoveVideoAnalyticsConfiguration.trt__RemoveVideoAnalyticsConfiguration, trt__RemoveVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:RemoveVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:RemoveVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveMetadataConfiguration soap_tmp___trt__RemoveMetadataConfiguration;
	_trt__RemoveMetadataConfigurationResponse trt__RemoveMetadataConfigurationResponse;
	trt__RemoveMetadataConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveMetadataConfiguration(soap, &soap_tmp___trt__RemoveMetadataConfiguration);
	if (!soap_get___trt__RemoveMetadataConfiguration(soap, &soap_tmp___trt__RemoveMetadataConfiguration, "-trt:RemoveMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveMetadataConfiguration(soap_tmp___trt__RemoveMetadataConfiguration.trt__RemoveMetadataConfiguration, trt__RemoveMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveMetadataConfigurationResponse.soap_put(soap, "trt:RemoveMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveMetadataConfigurationResponse.soap_put(soap, "trt:RemoveMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveAudioOutputConfiguration soap_tmp___trt__RemoveAudioOutputConfiguration;
	_trt__RemoveAudioOutputConfigurationResponse trt__RemoveAudioOutputConfigurationResponse;
	trt__RemoveAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveAudioOutputConfiguration(soap, &soap_tmp___trt__RemoveAudioOutputConfiguration);
	if (!soap_get___trt__RemoveAudioOutputConfiguration(soap, &soap_tmp___trt__RemoveAudioOutputConfiguration, "-trt:RemoveAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioOutputConfiguration(soap_tmp___trt__RemoveAudioOutputConfiguration.trt__RemoveAudioOutputConfiguration, trt__RemoveAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveAudioOutputConfigurationResponse.soap_put(soap, "trt:RemoveAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveAudioOutputConfigurationResponse.soap_put(soap, "trt:RemoveAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__RemoveAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__RemoveAudioDecoderConfiguration soap_tmp___trt__RemoveAudioDecoderConfiguration;
	_trt__RemoveAudioDecoderConfigurationResponse trt__RemoveAudioDecoderConfigurationResponse;
	trt__RemoveAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___trt__RemoveAudioDecoderConfiguration(soap, &soap_tmp___trt__RemoveAudioDecoderConfiguration);
	if (!soap_get___trt__RemoveAudioDecoderConfiguration(soap, &soap_tmp___trt__RemoveAudioDecoderConfiguration, "-trt:RemoveAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioDecoderConfiguration(soap_tmp___trt__RemoveAudioDecoderConfiguration.trt__RemoveAudioDecoderConfiguration, trt__RemoveAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__RemoveAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__RemoveAudioDecoderConfigurationResponse.soap_put(soap, "trt:RemoveAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__RemoveAudioDecoderConfigurationResponse.soap_put(soap, "trt:RemoveAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__DeleteProfile(struct soap *soap, MediaBindingService *service)
{	struct __trt__DeleteProfile soap_tmp___trt__DeleteProfile;
	_trt__DeleteProfileResponse trt__DeleteProfileResponse;
	trt__DeleteProfileResponse.soap_default(soap);
	soap_default___trt__DeleteProfile(soap, &soap_tmp___trt__DeleteProfile);
	if (!soap_get___trt__DeleteProfile(soap, &soap_tmp___trt__DeleteProfile, "-trt:DeleteProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteProfile(soap_tmp___trt__DeleteProfile.trt__DeleteProfile, trt__DeleteProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__DeleteProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__DeleteProfileResponse.soap_put(soap, "trt:DeleteProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__DeleteProfileResponse.soap_put(soap, "trt:DeleteProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoSourceConfigurations soap_tmp___trt__GetVideoSourceConfigurations;
	_trt__GetVideoSourceConfigurationsResponse trt__GetVideoSourceConfigurationsResponse;
	trt__GetVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetVideoSourceConfigurations(soap, &soap_tmp___trt__GetVideoSourceConfigurations);
	if (!soap_get___trt__GetVideoSourceConfigurations(soap, &soap_tmp___trt__GetVideoSourceConfigurations, "-trt:GetVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurations(soap_tmp___trt__GetVideoSourceConfigurations.trt__GetVideoSourceConfigurations, trt__GetVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoSourceConfigurationsResponse.soap_put(soap, "trt:GetVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoSourceConfigurationsResponse.soap_put(soap, "trt:GetVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoEncoderConfigurations soap_tmp___trt__GetVideoEncoderConfigurations;
	_trt__GetVideoEncoderConfigurationsResponse trt__GetVideoEncoderConfigurationsResponse;
	trt__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetVideoEncoderConfigurations(soap, &soap_tmp___trt__GetVideoEncoderConfigurations);
	if (!soap_get___trt__GetVideoEncoderConfigurations(soap, &soap_tmp___trt__GetVideoEncoderConfigurations, "-trt:GetVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurations(soap_tmp___trt__GetVideoEncoderConfigurations.trt__GetVideoEncoderConfigurations, trt__GetVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoEncoderConfigurationsResponse.soap_put(soap, "trt:GetVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoEncoderConfigurationsResponse.soap_put(soap, "trt:GetVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioSourceConfigurations soap_tmp___trt__GetAudioSourceConfigurations;
	_trt__GetAudioSourceConfigurationsResponse trt__GetAudioSourceConfigurationsResponse;
	trt__GetAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetAudioSourceConfigurations(soap, &soap_tmp___trt__GetAudioSourceConfigurations);
	if (!soap_get___trt__GetAudioSourceConfigurations(soap, &soap_tmp___trt__GetAudioSourceConfigurations, "-trt:GetAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurations(soap_tmp___trt__GetAudioSourceConfigurations.trt__GetAudioSourceConfigurations, trt__GetAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioSourceConfigurationsResponse.soap_put(soap, "trt:GetAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioSourceConfigurationsResponse.soap_put(soap, "trt:GetAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioEncoderConfigurations soap_tmp___trt__GetAudioEncoderConfigurations;
	_trt__GetAudioEncoderConfigurationsResponse trt__GetAudioEncoderConfigurationsResponse;
	trt__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetAudioEncoderConfigurations(soap, &soap_tmp___trt__GetAudioEncoderConfigurations);
	if (!soap_get___trt__GetAudioEncoderConfigurations(soap, &soap_tmp___trt__GetAudioEncoderConfigurations, "-trt:GetAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurations(soap_tmp___trt__GetAudioEncoderConfigurations.trt__GetAudioEncoderConfigurations, trt__GetAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioEncoderConfigurationsResponse.soap_put(soap, "trt:GetAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioEncoderConfigurationsResponse.soap_put(soap, "trt:GetAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoAnalyticsConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoAnalyticsConfigurations soap_tmp___trt__GetVideoAnalyticsConfigurations;
	_trt__GetVideoAnalyticsConfigurationsResponse trt__GetVideoAnalyticsConfigurationsResponse;
	trt__GetVideoAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetVideoAnalyticsConfigurations);
	if (!soap_get___trt__GetVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetVideoAnalyticsConfigurations, "-trt:GetVideoAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfigurations(soap_tmp___trt__GetVideoAnalyticsConfigurations.trt__GetVideoAnalyticsConfigurations, trt__GetVideoAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoAnalyticsConfigurationsResponse.soap_put(soap, "trt:GetVideoAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoAnalyticsConfigurationsResponse.soap_put(soap, "trt:GetVideoAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetMetadataConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetMetadataConfigurations soap_tmp___trt__GetMetadataConfigurations;
	_trt__GetMetadataConfigurationsResponse trt__GetMetadataConfigurationsResponse;
	trt__GetMetadataConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetMetadataConfigurations(soap, &soap_tmp___trt__GetMetadataConfigurations);
	if (!soap_get___trt__GetMetadataConfigurations(soap, &soap_tmp___trt__GetMetadataConfigurations, "-trt:GetMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurations(soap_tmp___trt__GetMetadataConfigurations.trt__GetMetadataConfigurations, trt__GetMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetMetadataConfigurationsResponse.soap_put(soap, "trt:GetMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetMetadataConfigurationsResponse.soap_put(soap, "trt:GetMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioOutputConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioOutputConfigurations soap_tmp___trt__GetAudioOutputConfigurations;
	_trt__GetAudioOutputConfigurationsResponse trt__GetAudioOutputConfigurationsResponse;
	trt__GetAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetAudioOutputConfigurations(soap, &soap_tmp___trt__GetAudioOutputConfigurations);
	if (!soap_get___trt__GetAudioOutputConfigurations(soap, &soap_tmp___trt__GetAudioOutputConfigurations, "-trt:GetAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurations(soap_tmp___trt__GetAudioOutputConfigurations.trt__GetAudioOutputConfigurations, trt__GetAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioOutputConfigurationsResponse.soap_put(soap, "trt:GetAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioOutputConfigurationsResponse.soap_put(soap, "trt:GetAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioDecoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioDecoderConfigurations soap_tmp___trt__GetAudioDecoderConfigurations;
	_trt__GetAudioDecoderConfigurationsResponse trt__GetAudioDecoderConfigurationsResponse;
	trt__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetAudioDecoderConfigurations(soap, &soap_tmp___trt__GetAudioDecoderConfigurations);
	if (!soap_get___trt__GetAudioDecoderConfigurations(soap, &soap_tmp___trt__GetAudioDecoderConfigurations, "-trt:GetAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurations(soap_tmp___trt__GetAudioDecoderConfigurations.trt__GetAudioDecoderConfigurations, trt__GetAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioDecoderConfigurationsResponse.soap_put(soap, "trt:GetAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioDecoderConfigurationsResponse.soap_put(soap, "trt:GetAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoSourceConfiguration soap_tmp___trt__GetVideoSourceConfiguration;
	_trt__GetVideoSourceConfigurationResponse trt__GetVideoSourceConfigurationResponse;
	trt__GetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__GetVideoSourceConfiguration(soap, &soap_tmp___trt__GetVideoSourceConfiguration);
	if (!soap_get___trt__GetVideoSourceConfiguration(soap, &soap_tmp___trt__GetVideoSourceConfiguration, "-trt:GetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfiguration(soap_tmp___trt__GetVideoSourceConfiguration.trt__GetVideoSourceConfiguration, trt__GetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoSourceConfigurationResponse.soap_put(soap, "trt:GetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoSourceConfigurationResponse.soap_put(soap, "trt:GetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoEncoderConfiguration soap_tmp___trt__GetVideoEncoderConfiguration;
	_trt__GetVideoEncoderConfigurationResponse trt__GetVideoEncoderConfigurationResponse;
	trt__GetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__GetVideoEncoderConfiguration(soap, &soap_tmp___trt__GetVideoEncoderConfiguration);
	if (!soap_get___trt__GetVideoEncoderConfiguration(soap, &soap_tmp___trt__GetVideoEncoderConfiguration, "-trt:GetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfiguration(soap_tmp___trt__GetVideoEncoderConfiguration.trt__GetVideoEncoderConfiguration, trt__GetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoEncoderConfigurationResponse.soap_put(soap, "trt:GetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoEncoderConfigurationResponse.soap_put(soap, "trt:GetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioSourceConfiguration soap_tmp___trt__GetAudioSourceConfiguration;
	_trt__GetAudioSourceConfigurationResponse trt__GetAudioSourceConfigurationResponse;
	trt__GetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__GetAudioSourceConfiguration(soap, &soap_tmp___trt__GetAudioSourceConfiguration);
	if (!soap_get___trt__GetAudioSourceConfiguration(soap, &soap_tmp___trt__GetAudioSourceConfiguration, "-trt:GetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfiguration(soap_tmp___trt__GetAudioSourceConfiguration.trt__GetAudioSourceConfiguration, trt__GetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioSourceConfigurationResponse.soap_put(soap, "trt:GetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioSourceConfigurationResponse.soap_put(soap, "trt:GetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioEncoderConfiguration soap_tmp___trt__GetAudioEncoderConfiguration;
	_trt__GetAudioEncoderConfigurationResponse trt__GetAudioEncoderConfigurationResponse;
	trt__GetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__GetAudioEncoderConfiguration(soap, &soap_tmp___trt__GetAudioEncoderConfiguration);
	if (!soap_get___trt__GetAudioEncoderConfiguration(soap, &soap_tmp___trt__GetAudioEncoderConfiguration, "-trt:GetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfiguration(soap_tmp___trt__GetAudioEncoderConfiguration.trt__GetAudioEncoderConfiguration, trt__GetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioEncoderConfigurationResponse.soap_put(soap, "trt:GetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioEncoderConfigurationResponse.soap_put(soap, "trt:GetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoAnalyticsConfiguration soap_tmp___trt__GetVideoAnalyticsConfiguration;
	_trt__GetVideoAnalyticsConfigurationResponse trt__GetVideoAnalyticsConfigurationResponse;
	trt__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___trt__GetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__GetVideoAnalyticsConfiguration);
	if (!soap_get___trt__GetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__GetVideoAnalyticsConfiguration, "-trt:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfiguration(soap_tmp___trt__GetVideoAnalyticsConfiguration.trt__GetVideoAnalyticsConfiguration, trt__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetMetadataConfiguration soap_tmp___trt__GetMetadataConfiguration;
	_trt__GetMetadataConfigurationResponse trt__GetMetadataConfigurationResponse;
	trt__GetMetadataConfigurationResponse.soap_default(soap);
	soap_default___trt__GetMetadataConfiguration(soap, &soap_tmp___trt__GetMetadataConfiguration);
	if (!soap_get___trt__GetMetadataConfiguration(soap, &soap_tmp___trt__GetMetadataConfiguration, "-trt:GetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfiguration(soap_tmp___trt__GetMetadataConfiguration.trt__GetMetadataConfiguration, trt__GetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetMetadataConfigurationResponse.soap_put(soap, "trt:GetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetMetadataConfigurationResponse.soap_put(soap, "trt:GetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioOutputConfiguration soap_tmp___trt__GetAudioOutputConfiguration;
	_trt__GetAudioOutputConfigurationResponse trt__GetAudioOutputConfigurationResponse;
	trt__GetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___trt__GetAudioOutputConfiguration(soap, &soap_tmp___trt__GetAudioOutputConfiguration);
	if (!soap_get___trt__GetAudioOutputConfiguration(soap, &soap_tmp___trt__GetAudioOutputConfiguration, "-trt:GetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfiguration(soap_tmp___trt__GetAudioOutputConfiguration.trt__GetAudioOutputConfiguration, trt__GetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioOutputConfigurationResponse.soap_put(soap, "trt:GetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioOutputConfigurationResponse.soap_put(soap, "trt:GetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioDecoderConfiguration soap_tmp___trt__GetAudioDecoderConfiguration;
	_trt__GetAudioDecoderConfigurationResponse trt__GetAudioDecoderConfigurationResponse;
	trt__GetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___trt__GetAudioDecoderConfiguration(soap, &soap_tmp___trt__GetAudioDecoderConfiguration);
	if (!soap_get___trt__GetAudioDecoderConfiguration(soap, &soap_tmp___trt__GetAudioDecoderConfiguration, "-trt:GetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfiguration(soap_tmp___trt__GetAudioDecoderConfiguration.trt__GetAudioDecoderConfiguration, trt__GetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioDecoderConfigurationResponse.soap_put(soap, "trt:GetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioDecoderConfigurationResponse.soap_put(soap, "trt:GetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleVideoEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleVideoEncoderConfigurations soap_tmp___trt__GetCompatibleVideoEncoderConfigurations;
	_trt__GetCompatibleVideoEncoderConfigurationsResponse trt__GetCompatibleVideoEncoderConfigurationsResponse;
	trt__GetCompatibleVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoEncoderConfigurations);
	if (!soap_get___trt__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoEncoderConfigurations, "-trt:GetCompatibleVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoEncoderConfigurations(soap_tmp___trt__GetCompatibleVideoEncoderConfigurations.trt__GetCompatibleVideoEncoderConfigurations, trt__GetCompatibleVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleVideoEncoderConfigurationsResponse.soap_put(soap, "trt:GetCompatibleVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleVideoEncoderConfigurationsResponse.soap_put(soap, "trt:GetCompatibleVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleVideoSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleVideoSourceConfigurations soap_tmp___trt__GetCompatibleVideoSourceConfigurations;
	_trt__GetCompatibleVideoSourceConfigurationsResponse trt__GetCompatibleVideoSourceConfigurationsResponse;
	trt__GetCompatibleVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoSourceConfigurations);
	if (!soap_get___trt__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoSourceConfigurations, "-trt:GetCompatibleVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoSourceConfigurations(soap_tmp___trt__GetCompatibleVideoSourceConfigurations.trt__GetCompatibleVideoSourceConfigurations, trt__GetCompatibleVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleVideoSourceConfigurationsResponse.soap_put(soap, "trt:GetCompatibleVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleVideoSourceConfigurationsResponse.soap_put(soap, "trt:GetCompatibleVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleAudioEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleAudioEncoderConfigurations soap_tmp___trt__GetCompatibleAudioEncoderConfigurations;
	_trt__GetCompatibleAudioEncoderConfigurationsResponse trt__GetCompatibleAudioEncoderConfigurationsResponse;
	trt__GetCompatibleAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioEncoderConfigurations);
	if (!soap_get___trt__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioEncoderConfigurations, "-trt:GetCompatibleAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioEncoderConfigurations(soap_tmp___trt__GetCompatibleAudioEncoderConfigurations.trt__GetCompatibleAudioEncoderConfigurations, trt__GetCompatibleAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleAudioEncoderConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleAudioEncoderConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleAudioSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleAudioSourceConfigurations soap_tmp___trt__GetCompatibleAudioSourceConfigurations;
	_trt__GetCompatibleAudioSourceConfigurationsResponse trt__GetCompatibleAudioSourceConfigurationsResponse;
	trt__GetCompatibleAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioSourceConfigurations);
	if (!soap_get___trt__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioSourceConfigurations, "-trt:GetCompatibleAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioSourceConfigurations(soap_tmp___trt__GetCompatibleAudioSourceConfigurations.trt__GetCompatibleAudioSourceConfigurations, trt__GetCompatibleAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleAudioSourceConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleAudioSourceConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleVideoAnalyticsConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleVideoAnalyticsConfigurations soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations;
	_trt__GetCompatibleVideoAnalyticsConfigurationsResponse trt__GetCompatibleVideoAnalyticsConfigurationsResponse;
	trt__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations);
	if (!soap_get___trt__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations, "-trt:GetCompatibleVideoAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoAnalyticsConfigurations(soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations.trt__GetCompatibleVideoAnalyticsConfigurations, trt__GetCompatibleVideoAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_put(soap, "trt:GetCompatibleVideoAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_put(soap, "trt:GetCompatibleVideoAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleMetadataConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleMetadataConfigurations soap_tmp___trt__GetCompatibleMetadataConfigurations;
	_trt__GetCompatibleMetadataConfigurationsResponse trt__GetCompatibleMetadataConfigurationsResponse;
	trt__GetCompatibleMetadataConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleMetadataConfigurations(soap, &soap_tmp___trt__GetCompatibleMetadataConfigurations);
	if (!soap_get___trt__GetCompatibleMetadataConfigurations(soap, &soap_tmp___trt__GetCompatibleMetadataConfigurations, "-trt:GetCompatibleMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleMetadataConfigurations(soap_tmp___trt__GetCompatibleMetadataConfigurations.trt__GetCompatibleMetadataConfigurations, trt__GetCompatibleMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleMetadataConfigurationsResponse.soap_put(soap, "trt:GetCompatibleMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleMetadataConfigurationsResponse.soap_put(soap, "trt:GetCompatibleMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleAudioOutputConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleAudioOutputConfigurations soap_tmp___trt__GetCompatibleAudioOutputConfigurations;
	_trt__GetCompatibleAudioOutputConfigurationsResponse trt__GetCompatibleAudioOutputConfigurationsResponse;
	trt__GetCompatibleAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioOutputConfigurations);
	if (!soap_get___trt__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioOutputConfigurations, "-trt:GetCompatibleAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioOutputConfigurations(soap_tmp___trt__GetCompatibleAudioOutputConfigurations.trt__GetCompatibleAudioOutputConfigurations, trt__GetCompatibleAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleAudioOutputConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleAudioOutputConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetCompatibleAudioDecoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetCompatibleAudioDecoderConfigurations soap_tmp___trt__GetCompatibleAudioDecoderConfigurations;
	_trt__GetCompatibleAudioDecoderConfigurationsResponse trt__GetCompatibleAudioDecoderConfigurationsResponse;
	trt__GetCompatibleAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___trt__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioDecoderConfigurations);
	if (!soap_get___trt__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioDecoderConfigurations, "-trt:GetCompatibleAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioDecoderConfigurations(soap_tmp___trt__GetCompatibleAudioDecoderConfigurations.trt__GetCompatibleAudioDecoderConfigurations, trt__GetCompatibleAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetCompatibleAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetCompatibleAudioDecoderConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetCompatibleAudioDecoderConfigurationsResponse.soap_put(soap, "trt:GetCompatibleAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetVideoSourceConfiguration soap_tmp___trt__SetVideoSourceConfiguration;
	_trt__SetVideoSourceConfigurationResponse trt__SetVideoSourceConfigurationResponse;
	trt__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__SetVideoSourceConfiguration(soap, &soap_tmp___trt__SetVideoSourceConfiguration);
	if (!soap_get___trt__SetVideoSourceConfiguration(soap, &soap_tmp___trt__SetVideoSourceConfiguration, "-trt:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___trt__SetVideoSourceConfiguration.trt__SetVideoSourceConfiguration, trt__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetVideoSourceConfigurationResponse.soap_put(soap, "trt:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetVideoSourceConfigurationResponse.soap_put(soap, "trt:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetVideoEncoderConfiguration soap_tmp___trt__SetVideoEncoderConfiguration;
	_trt__SetVideoEncoderConfigurationResponse trt__SetVideoEncoderConfigurationResponse;
	trt__SetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__SetVideoEncoderConfiguration(soap, &soap_tmp___trt__SetVideoEncoderConfiguration);
	if (!soap_get___trt__SetVideoEncoderConfiguration(soap, &soap_tmp___trt__SetVideoEncoderConfiguration, "-trt:SetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoEncoderConfiguration(soap_tmp___trt__SetVideoEncoderConfiguration.trt__SetVideoEncoderConfiguration, trt__SetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetVideoEncoderConfigurationResponse.soap_put(soap, "trt:SetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetVideoEncoderConfigurationResponse.soap_put(soap, "trt:SetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetAudioSourceConfiguration soap_tmp___trt__SetAudioSourceConfiguration;
	_trt__SetAudioSourceConfigurationResponse trt__SetAudioSourceConfigurationResponse;
	trt__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___trt__SetAudioSourceConfiguration(soap, &soap_tmp___trt__SetAudioSourceConfiguration);
	if (!soap_get___trt__SetAudioSourceConfiguration(soap, &soap_tmp___trt__SetAudioSourceConfiguration, "-trt:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___trt__SetAudioSourceConfiguration.trt__SetAudioSourceConfiguration, trt__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetAudioSourceConfigurationResponse.soap_put(soap, "trt:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetAudioSourceConfigurationResponse.soap_put(soap, "trt:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetAudioEncoderConfiguration soap_tmp___trt__SetAudioEncoderConfiguration;
	_trt__SetAudioEncoderConfigurationResponse trt__SetAudioEncoderConfigurationResponse;
	trt__SetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___trt__SetAudioEncoderConfiguration(soap, &soap_tmp___trt__SetAudioEncoderConfiguration);
	if (!soap_get___trt__SetAudioEncoderConfiguration(soap, &soap_tmp___trt__SetAudioEncoderConfiguration, "-trt:SetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioEncoderConfiguration(soap_tmp___trt__SetAudioEncoderConfiguration.trt__SetAudioEncoderConfiguration, trt__SetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetAudioEncoderConfigurationResponse.soap_put(soap, "trt:SetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetAudioEncoderConfigurationResponse.soap_put(soap, "trt:SetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetVideoAnalyticsConfiguration soap_tmp___trt__SetVideoAnalyticsConfiguration;
	_trt__SetVideoAnalyticsConfigurationResponse trt__SetVideoAnalyticsConfigurationResponse;
	trt__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___trt__SetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__SetVideoAnalyticsConfiguration);
	if (!soap_get___trt__SetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__SetVideoAnalyticsConfiguration, "-trt:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoAnalyticsConfiguration(soap_tmp___trt__SetVideoAnalyticsConfiguration.trt__SetVideoAnalyticsConfiguration, trt__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "trt:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetMetadataConfiguration soap_tmp___trt__SetMetadataConfiguration;
	_trt__SetMetadataConfigurationResponse trt__SetMetadataConfigurationResponse;
	trt__SetMetadataConfigurationResponse.soap_default(soap);
	soap_default___trt__SetMetadataConfiguration(soap, &soap_tmp___trt__SetMetadataConfiguration);
	if (!soap_get___trt__SetMetadataConfiguration(soap, &soap_tmp___trt__SetMetadataConfiguration, "-trt:SetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMetadataConfiguration(soap_tmp___trt__SetMetadataConfiguration.trt__SetMetadataConfiguration, trt__SetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetMetadataConfigurationResponse.soap_put(soap, "trt:SetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetMetadataConfigurationResponse.soap_put(soap, "trt:SetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetAudioOutputConfiguration soap_tmp___trt__SetAudioOutputConfiguration;
	_trt__SetAudioOutputConfigurationResponse trt__SetAudioOutputConfigurationResponse;
	trt__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___trt__SetAudioOutputConfiguration(soap, &soap_tmp___trt__SetAudioOutputConfiguration);
	if (!soap_get___trt__SetAudioOutputConfiguration(soap, &soap_tmp___trt__SetAudioOutputConfiguration, "-trt:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___trt__SetAudioOutputConfiguration.trt__SetAudioOutputConfiguration, trt__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetAudioOutputConfigurationResponse.soap_put(soap, "trt:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetAudioOutputConfigurationResponse.soap_put(soap, "trt:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetAudioDecoderConfiguration soap_tmp___trt__SetAudioDecoderConfiguration;
	_trt__SetAudioDecoderConfigurationResponse trt__SetAudioDecoderConfigurationResponse;
	trt__SetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___trt__SetAudioDecoderConfiguration(soap, &soap_tmp___trt__SetAudioDecoderConfiguration);
	if (!soap_get___trt__SetAudioDecoderConfiguration(soap, &soap_tmp___trt__SetAudioDecoderConfiguration, "-trt:SetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioDecoderConfiguration(soap_tmp___trt__SetAudioDecoderConfiguration.trt__SetAudioDecoderConfiguration, trt__SetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetAudioDecoderConfigurationResponse.soap_put(soap, "trt:SetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetAudioDecoderConfigurationResponse.soap_put(soap, "trt:SetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoSourceConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoSourceConfigurationOptions soap_tmp___trt__GetVideoSourceConfigurationOptions;
	_trt__GetVideoSourceConfigurationOptionsResponse trt__GetVideoSourceConfigurationOptionsResponse;
	trt__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetVideoSourceConfigurationOptions(soap, &soap_tmp___trt__GetVideoSourceConfigurationOptions);
	if (!soap_get___trt__GetVideoSourceConfigurationOptions(soap, &soap_tmp___trt__GetVideoSourceConfigurationOptions, "-trt:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___trt__GetVideoSourceConfigurationOptions.trt__GetVideoSourceConfigurationOptions, trt__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "trt:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "trt:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoEncoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoEncoderConfigurationOptions soap_tmp___trt__GetVideoEncoderConfigurationOptions;
	_trt__GetVideoEncoderConfigurationOptionsResponse trt__GetVideoEncoderConfigurationOptionsResponse;
	trt__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___trt__GetVideoEncoderConfigurationOptions);
	if (!soap_get___trt__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___trt__GetVideoEncoderConfigurationOptions, "-trt:GetVideoEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurationOptions(soap_tmp___trt__GetVideoEncoderConfigurationOptions.trt__GetVideoEncoderConfigurationOptions, trt__GetVideoEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "trt:GetVideoEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "trt:GetVideoEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioSourceConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioSourceConfigurationOptions soap_tmp___trt__GetAudioSourceConfigurationOptions;
	_trt__GetAudioSourceConfigurationOptionsResponse trt__GetAudioSourceConfigurationOptionsResponse;
	trt__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetAudioSourceConfigurationOptions(soap, &soap_tmp___trt__GetAudioSourceConfigurationOptions);
	if (!soap_get___trt__GetAudioSourceConfigurationOptions(soap, &soap_tmp___trt__GetAudioSourceConfigurationOptions, "-trt:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___trt__GetAudioSourceConfigurationOptions.trt__GetAudioSourceConfigurationOptions, trt__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioEncoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioEncoderConfigurationOptions soap_tmp___trt__GetAudioEncoderConfigurationOptions;
	_trt__GetAudioEncoderConfigurationOptionsResponse trt__GetAudioEncoderConfigurationOptionsResponse;
	trt__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioEncoderConfigurationOptions);
	if (!soap_get___trt__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioEncoderConfigurationOptions, "-trt:GetAudioEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurationOptions(soap_tmp___trt__GetAudioEncoderConfigurationOptions.trt__GetAudioEncoderConfigurationOptions, trt__GetAudioEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetMetadataConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetMetadataConfigurationOptions soap_tmp___trt__GetMetadataConfigurationOptions;
	_trt__GetMetadataConfigurationOptionsResponse trt__GetMetadataConfigurationOptionsResponse;
	trt__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetMetadataConfigurationOptions(soap, &soap_tmp___trt__GetMetadataConfigurationOptions);
	if (!soap_get___trt__GetMetadataConfigurationOptions(soap, &soap_tmp___trt__GetMetadataConfigurationOptions, "-trt:GetMetadataConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurationOptions(soap_tmp___trt__GetMetadataConfigurationOptions.trt__GetMetadataConfigurationOptions, trt__GetMetadataConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetMetadataConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetMetadataConfigurationOptionsResponse.soap_put(soap, "trt:GetMetadataConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetMetadataConfigurationOptionsResponse.soap_put(soap, "trt:GetMetadataConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioOutputConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioOutputConfigurationOptions soap_tmp___trt__GetAudioOutputConfigurationOptions;
	_trt__GetAudioOutputConfigurationOptionsResponse trt__GetAudioOutputConfigurationOptionsResponse;
	trt__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetAudioOutputConfigurationOptions(soap, &soap_tmp___trt__GetAudioOutputConfigurationOptions);
	if (!soap_get___trt__GetAudioOutputConfigurationOptions(soap, &soap_tmp___trt__GetAudioOutputConfigurationOptions, "-trt:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___trt__GetAudioOutputConfigurationOptions.trt__GetAudioOutputConfigurationOptions, trt__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetAudioDecoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetAudioDecoderConfigurationOptions soap_tmp___trt__GetAudioDecoderConfigurationOptions;
	_trt__GetAudioDecoderConfigurationOptionsResponse trt__GetAudioDecoderConfigurationOptionsResponse;
	trt__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___trt__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioDecoderConfigurationOptions);
	if (!soap_get___trt__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioDecoderConfigurationOptions, "-trt:GetAudioDecoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurationOptions(soap_tmp___trt__GetAudioDecoderConfigurationOptions.trt__GetAudioDecoderConfigurationOptions, trt__GetAudioDecoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetAudioDecoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioDecoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "trt:GetAudioDecoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances;
	_trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse;
	trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_default(soap);
	soap_default___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances);
	if (!soap_get___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances, "-trt:GetGuaranteedNumberOfVideoEncoderInstances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetGuaranteedNumberOfVideoEncoderInstances(soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances.trt__GetGuaranteedNumberOfVideoEncoderInstances, trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_put(soap, "trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_put(soap, "trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetStreamUri(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetStreamUri soap_tmp___trt__GetStreamUri;
	_trt__GetStreamUriResponse trt__GetStreamUriResponse;
	trt__GetStreamUriResponse.soap_default(soap);
	soap_default___trt__GetStreamUri(soap, &soap_tmp___trt__GetStreamUri);
	if (!soap_get___trt__GetStreamUri(soap, &soap_tmp___trt__GetStreamUri, "-trt:GetStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetStreamUri(soap_tmp___trt__GetStreamUri.trt__GetStreamUri, trt__GetStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetStreamUriResponse.soap_put(soap, "trt:GetStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetStreamUriResponse.soap_put(soap, "trt:GetStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__StartMulticastStreaming(struct soap *soap, MediaBindingService *service)
{	struct __trt__StartMulticastStreaming soap_tmp___trt__StartMulticastStreaming;
	_trt__StartMulticastStreamingResponse trt__StartMulticastStreamingResponse;
	trt__StartMulticastStreamingResponse.soap_default(soap);
	soap_default___trt__StartMulticastStreaming(soap, &soap_tmp___trt__StartMulticastStreaming);
	if (!soap_get___trt__StartMulticastStreaming(soap, &soap_tmp___trt__StartMulticastStreaming, "-trt:StartMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StartMulticastStreaming(soap_tmp___trt__StartMulticastStreaming.trt__StartMulticastStreaming, trt__StartMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__StartMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__StartMulticastStreamingResponse.soap_put(soap, "trt:StartMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__StartMulticastStreamingResponse.soap_put(soap, "trt:StartMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__StopMulticastStreaming(struct soap *soap, MediaBindingService *service)
{	struct __trt__StopMulticastStreaming soap_tmp___trt__StopMulticastStreaming;
	_trt__StopMulticastStreamingResponse trt__StopMulticastStreamingResponse;
	trt__StopMulticastStreamingResponse.soap_default(soap);
	soap_default___trt__StopMulticastStreaming(soap, &soap_tmp___trt__StopMulticastStreaming);
	if (!soap_get___trt__StopMulticastStreaming(soap, &soap_tmp___trt__StopMulticastStreaming, "-trt:StopMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StopMulticastStreaming(soap_tmp___trt__StopMulticastStreaming.trt__StopMulticastStreaming, trt__StopMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__StopMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__StopMulticastStreamingResponse.soap_put(soap, "trt:StopMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__StopMulticastStreamingResponse.soap_put(soap, "trt:StopMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetSynchronizationPoint(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetSynchronizationPoint soap_tmp___trt__SetSynchronizationPoint;
	_trt__SetSynchronizationPointResponse trt__SetSynchronizationPointResponse;
	trt__SetSynchronizationPointResponse.soap_default(soap);
	soap_default___trt__SetSynchronizationPoint(soap, &soap_tmp___trt__SetSynchronizationPoint);
	if (!soap_get___trt__SetSynchronizationPoint(soap, &soap_tmp___trt__SetSynchronizationPoint, "-trt:SetSynchronizationPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSynchronizationPoint(soap_tmp___trt__SetSynchronizationPoint.trt__SetSynchronizationPoint, trt__SetSynchronizationPointResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetSynchronizationPointResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetSynchronizationPointResponse.soap_put(soap, "trt:SetSynchronizationPointResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetSynchronizationPointResponse.soap_put(soap, "trt:SetSynchronizationPointResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetSnapshotUri(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetSnapshotUri soap_tmp___trt__GetSnapshotUri;
	_trt__GetSnapshotUriResponse trt__GetSnapshotUriResponse;
	trt__GetSnapshotUriResponse.soap_default(soap);
	soap_default___trt__GetSnapshotUri(soap, &soap_tmp___trt__GetSnapshotUri);
	if (!soap_get___trt__GetSnapshotUri(soap, &soap_tmp___trt__GetSnapshotUri, "-trt:GetSnapshotUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSnapshotUri(soap_tmp___trt__GetSnapshotUri.trt__GetSnapshotUri, trt__GetSnapshotUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetSnapshotUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetSnapshotUriResponse.soap_put(soap, "trt:GetSnapshotUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetSnapshotUriResponse.soap_put(soap, "trt:GetSnapshotUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetVideoSourceModes(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetVideoSourceModes soap_tmp___trt__GetVideoSourceModes;
	_trt__GetVideoSourceModesResponse trt__GetVideoSourceModesResponse;
	trt__GetVideoSourceModesResponse.soap_default(soap);
	soap_default___trt__GetVideoSourceModes(soap, &soap_tmp___trt__GetVideoSourceModes);
	if (!soap_get___trt__GetVideoSourceModes(soap, &soap_tmp___trt__GetVideoSourceModes, "-trt:GetVideoSourceModes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceModes(soap_tmp___trt__GetVideoSourceModes.trt__GetVideoSourceModes, trt__GetVideoSourceModesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetVideoSourceModesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetVideoSourceModesResponse.soap_put(soap, "trt:GetVideoSourceModesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetVideoSourceModesResponse.soap_put(soap, "trt:GetVideoSourceModesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetVideoSourceMode(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetVideoSourceMode soap_tmp___trt__SetVideoSourceMode;
	_trt__SetVideoSourceModeResponse trt__SetVideoSourceModeResponse;
	trt__SetVideoSourceModeResponse.soap_default(soap);
	soap_default___trt__SetVideoSourceMode(soap, &soap_tmp___trt__SetVideoSourceMode);
	if (!soap_get___trt__SetVideoSourceMode(soap, &soap_tmp___trt__SetVideoSourceMode, "-trt:SetVideoSourceMode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceMode(soap_tmp___trt__SetVideoSourceMode.trt__SetVideoSourceMode, trt__SetVideoSourceModeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetVideoSourceModeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetVideoSourceModeResponse.soap_put(soap, "trt:SetVideoSourceModeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetVideoSourceModeResponse.soap_put(soap, "trt:SetVideoSourceModeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetOSDs(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetOSDs soap_tmp___trt__GetOSDs;
	_trt__GetOSDsResponse trt__GetOSDsResponse;
	trt__GetOSDsResponse.soap_default(soap);
	soap_default___trt__GetOSDs(soap, &soap_tmp___trt__GetOSDs);
	if (!soap_get___trt__GetOSDs(soap, &soap_tmp___trt__GetOSDs, "-trt:GetOSDs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDs(soap_tmp___trt__GetOSDs.trt__GetOSDs, trt__GetOSDsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetOSDsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetOSDsResponse.soap_put(soap, "trt:GetOSDsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetOSDsResponse.soap_put(soap, "trt:GetOSDsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetOSD(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetOSD soap_tmp___trt__GetOSD;
	_trt__GetOSDResponse trt__GetOSDResponse;
	trt__GetOSDResponse.soap_default(soap);
	soap_default___trt__GetOSD(soap, &soap_tmp___trt__GetOSD);
	if (!soap_get___trt__GetOSD(soap, &soap_tmp___trt__GetOSD, "-trt:GetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSD(soap_tmp___trt__GetOSD.trt__GetOSD, trt__GetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetOSDResponse.soap_put(soap, "trt:GetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetOSDResponse.soap_put(soap, "trt:GetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__GetOSDOptions(struct soap *soap, MediaBindingService *service)
{	struct __trt__GetOSDOptions soap_tmp___trt__GetOSDOptions;
	_trt__GetOSDOptionsResponse trt__GetOSDOptionsResponse;
	trt__GetOSDOptionsResponse.soap_default(soap);
	soap_default___trt__GetOSDOptions(soap, &soap_tmp___trt__GetOSDOptions);
	if (!soap_get___trt__GetOSDOptions(soap, &soap_tmp___trt__GetOSDOptions, "-trt:GetOSDOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDOptions(soap_tmp___trt__GetOSDOptions.trt__GetOSDOptions, trt__GetOSDOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__GetOSDOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__GetOSDOptionsResponse.soap_put(soap, "trt:GetOSDOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__GetOSDOptionsResponse.soap_put(soap, "trt:GetOSDOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__SetOSD(struct soap *soap, MediaBindingService *service)
{	struct __trt__SetOSD soap_tmp___trt__SetOSD;
	_trt__SetOSDResponse trt__SetOSDResponse;
	trt__SetOSDResponse.soap_default(soap);
	soap_default___trt__SetOSD(soap, &soap_tmp___trt__SetOSD);
	if (!soap_get___trt__SetOSD(soap, &soap_tmp___trt__SetOSD, "-trt:SetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetOSD(soap_tmp___trt__SetOSD.trt__SetOSD, trt__SetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__SetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__SetOSDResponse.soap_put(soap, "trt:SetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__SetOSDResponse.soap_put(soap, "trt:SetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__CreateOSD(struct soap *soap, MediaBindingService *service)
{	struct __trt__CreateOSD soap_tmp___trt__CreateOSD;
	_trt__CreateOSDResponse trt__CreateOSDResponse;
	trt__CreateOSDResponse.soap_default(soap);
	soap_default___trt__CreateOSD(soap, &soap_tmp___trt__CreateOSD);
	if (!soap_get___trt__CreateOSD(soap, &soap_tmp___trt__CreateOSD, "-trt:CreateOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateOSD(soap_tmp___trt__CreateOSD.trt__CreateOSD, trt__CreateOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__CreateOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__CreateOSDResponse.soap_put(soap, "trt:CreateOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__CreateOSDResponse.soap_put(soap, "trt:CreateOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___trt__DeleteOSD(struct soap *soap, MediaBindingService *service)
{	struct __trt__DeleteOSD soap_tmp___trt__DeleteOSD;
	_trt__DeleteOSDResponse trt__DeleteOSDResponse;
	trt__DeleteOSDResponse.soap_default(soap);
	soap_default___trt__DeleteOSD(soap, &soap_tmp___trt__DeleteOSD);
	if (!soap_get___trt__DeleteOSD(soap, &soap_tmp___trt__DeleteOSD, "-trt:DeleteOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteOSD(soap_tmp___trt__DeleteOSD.trt__DeleteOSD, trt__DeleteOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	trt__DeleteOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || trt__DeleteOSDResponse.soap_put(soap, "trt:DeleteOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || trt__DeleteOSDResponse.soap_put(soap, "trt:DeleteOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
